{"version":3,"file":"src_app_pages_users_profile_profile_module_ts.js","mappings":"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","sources":["./src/app/pages/users/profile/profile-routing.module.ts","./src/app/pages/users/profile/profile.module.ts","./src/app/pages/users/profile/profile.page.ts","./src/app/pages/users/profile/profile.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfilePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport {NgApexchartsModule} from 'ng-apexcharts'\r\n\r\nimport { ProfilePageRoutingModule } from './profile-routing.module';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ProfilePageRoutingModule,\r\n    NgApexchartsModule\r\n  ],\r\n  declarations: [ProfilePage]\r\n})\r\nexport class ProfilePageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n\r\nimport {\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexXAxis,\r\n  ApexStroke,\r\n  ApexYAxis,\r\n  ApexMarkers,\r\n  ApexTooltip,\r\n  ApexFill\r\n} from \"ng-apexcharts\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis;\r\n  stroke: ApexStroke;\r\n  markers: ApexMarkers;\r\n  tooltip: ApexTooltip;\r\n  fill: ApexFill;\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.page.html',\r\n  styleUrls: ['./profile.page.scss'],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n\r\n  @ViewChild(\"chart\") chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n  customer: any;\r\n  last_visit: Date;\r\n  service: String;\r\n  payment: Number;\r\n  Payment = [];\r\n  Date = [];\r\n  currentYear = \"2021\"\r\n\r\n  constructor(private router: Router,\r\n    private userService: UserService,\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getCustomer()\r\n    this.getGraphData()\r\n    this.getCurrentYear()\r\n    this.Chart()\r\n    this.Data();\r\n  }\r\n\r\n  getCustomer() {\r\n    this.customer = JSON.parse(this.userService.getCustomerFromStorage());\r\n    this.last_visit = this.customer.last_visit;\r\n    this.service = this.customer.service;\r\n    this.payment = this.customer.payment;\r\n  }\r\n\r\n  update() {\r\n    let editedDate = this.last_visit.toString();\r\n    if (editedDate.split('-')[1] === this.customer.last_visit.split('-')[1]) {\r\n      this.userService.editProfile(this.customer.customer_data_id, this.customer.customer_id, this.service, this.payment, this.last_visit).subscribe(\r\n        async data => {\r\n          await this.alertService.presentToast(data['msg'], 'success');\r\n          await this.userService.addCusomerToStorage(JSON.stringify(data['customer']))\r\n        }\r\n      )\r\n    } else {\r\n      this.userService.updateProfile(this.customer.customer_id, this.service, this.payment, this.last_visit).subscribe(\r\n        async data => {\r\n          this.alertService.presentToast(data['msg'], 'success');\r\n          this.userService.addCusomerToStorage(JSON.stringify(data['customer']))\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  getCurrentYear() {\r\n    let date = new Date();\r\n    this.currentYear = String(date.getFullYear());\r\n  }\r\n\r\n  async getGraphData() {\r\n    await this.userService.getGraphData(this.customer.customer_id).subscribe(data => {\r\n      data['Payment'].forEach(element => {\r\n        this.Payment.push(element)\r\n      });\r\n      data['Date'].forEach(element => {\r\n        this.Date.push(element)\r\n      });\r\n    })\r\n  }\r\n\r\n  Data(){\r\n    let i=0;\r\n    let series = [];\r\n\r\n    // while(i<this.Date.length) {\r\n    //   var x = this.Date[i];\r\n    //   var y = this.Payment[i];\r\n    //   series.push([x,y])\r\n    //   i++;\r\n    // }\r\n    for(i=0; i<this.Date.length; i++) {\r\n      console.log(\"Hello\")\r\n    }\r\n    return series;\r\n  }\r\n\r\n  Chart() {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          // data: this.Data()\r\n          data: this.Payment\r\n        }\r\n      ],\r\n\r\n      chart: {\r\n        height: 360,\r\n        type: \"line\",\r\n        zoom: {\r\n          enabled: false\r\n        },\r\n\r\n        toolbar: {\r\n          show: false,\r\n        }\r\n      },\r\n\r\n      stroke: {\r\n        curve: 'smooth',\r\n      },\r\n\r\n      markers: {\r\n        size: 6,\r\n        hover: {\r\n          size: 10\r\n        }\r\n      },\r\n\r\n      fill: {\r\n        colors: [\"#00E396\"],\r\n        opacity: 0.8,\r\n      },\r\n\r\n      tooltip: {\r\n        followCursor: false,\r\n        theme: \"dark\",\r\n        marker: {\r\n          show: false\r\n        },\r\n        x: {\r\n          show: false\r\n        },\r\n        y:{\r\n          title:{\r\n            formatter: function() {\r\n              return \"₹\";\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      xaxis: {\r\n        title: {\r\n          text: \"Year \"+this.currentYear\r\n        },\r\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\",  \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n      },\r\n\r\n      yaxis: {\r\n        title: {\r\n          text: \"Money Spend\"\r\n        },\r\n        labels:{\r\n          minWidth: 10\r\n        },\r\n        min: 0,\r\n        max: 2000,\r\n        tickAmount: 6\r\n      }\r\n    };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userService.remove('customer');\r\n  }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{customer.first_name}} {{customer.last_name}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <div class=\\\"grid\\\">\\r\\n        <div>\\r\\n          <ion-card>\\r\\n            <ion-card-content>\\r\\n              <img [src]=\\\"'data:image/png;base64,'+customer.image_name\\\">\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </div>\\r\\n        <div class=\\\"wrapper\\\">\\r\\n          <ion-item>\\r\\n            <ion-label>First Name:</ion-label>\\r\\n            <ion-label>{{customer.first_name}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label>Last Name:</ion-label>\\r\\n            <ion-label>{{customer.last_name}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label>Last Visit:</ion-label>\\r\\n            <ion-input value=\\\"{{customer.last_visit}}\\\" type=\\\"date\\\" name=\\\"last_visit\\\" [(ngModel)]=\\\"last_visit\\\"></ion-input>\\r\\n            <ion-icon name=\\\"pencil-outline\\\"></ion-icon>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label>Service:</ion-label>\\r\\n            <ion-input value=\\\"{{customer.service}}\\\" type=\\\"text\\\" name=\\\"service\\\" [(ngModel)]=\\\"service\\\"></ion-input>\\r\\n            <ion-icon name=\\\"pencil-outline\\\"></ion-icon>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label>Payment Status:</ion-label>\\r\\n            <ion-input value=\\\"{{customer.payment}}\\\" type=\\\"number\\\" name=\\\"payment\\\" [(ngModel)]=\\\"payment\\\"></ion-input>\\r\\n            <ion-icon name=\\\"pencil-outline\\\"></ion-icon>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label>Important Dates:</ion-label>\\r\\n            <ion-label>{{customer.anniversary}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-button slot=\\\"end\\\" (click)=\\\"update()\\\">Update</ion-button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <ion-item>\\r\\n        <ion-label>About Customer</ion-label>\\r\\n        <ion-label>{{customer.message}}</ion-label>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <apx-chart\\r\\n      [series]=\\\"chartOptions.series\\\"\\r\\n      [chart]=\\\"chartOptions.chart\\\"\\r\\n      [xaxis]=\\\"chartOptions.xaxis\\\"\\r\\n      [yaxis]=\\\"chartOptions.yaxis\\\"\\r\\n      [stroke]=\\\"chartOptions.stroke\\\"\\r\\n      [markers]=\\\"chartOptions.markers\\\"\\r\\n      [tooltip]=\\\"chartOptions.tooltip\\\"\\r\\n      [fill]=\\\"chartOptions.fill\\\"\\r\\n    ></apx-chart>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}