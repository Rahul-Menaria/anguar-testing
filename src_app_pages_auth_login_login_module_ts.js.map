{"version":3,"file":"src_app_pages_auth_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBsB;AACM;AAEM;AACF;AACgB;IAQ/D,SAAS,SAAT,SAAS;IASpB,YAAoB,MAAc,EACd,WAAwB,EACxB,YAAiC,EACjC,YAA0B,EAC1B,KAAqB;QAJrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QAXzC,UAAK,GAAW,gBAAgB;QAChC,aAAQ,GAAW,SAAS;QAC5B,iBAAY,GAAC,KAAK;QAClB,YAAO,GAAG,KAAK,CAAC;QAChB,iBAAY,GAAW,UAAU,CAAC;QAClC,iBAAY,GAAW,SAAS,CAAC;IAMY,CAAC;IAE9C,QAAQ;QACN,IAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACrC;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,YAAY,IAAE,MAAM,EAAC,WAAU,EAAC,OAAM,CAAC;QAC9D,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,YAAY,IAAE,SAAS,EAAC,MAAK,EAAC,UAAS,CAAC;IACjE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,IAAI,GAAE;YACJ,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;YAC9D,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,CACF;QACD,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;IACrB,CAAC;CACF;;YAnDwB,mDAAM;YAGtB,sEAAW;YACX,sFAAmB;YAFnB,wEAAY;YAFZ,2DAAc;;AAYV,SAAS;IANrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,0JAAgC;;KAEjC,CAAC;GAEW,SAAS,CAuCrB;AAvCqB;;;;;;;;;;;;;;;ACbtB,iEAAe,ovEAAovE","sources":["./src/app/pages/auth/login/login-routing.module.ts","./src/app/pages/auth/login/login.module.ts","./src/app/pages/auth/login/login.page.ts","./src/app/pages/auth/login/login.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\n\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TokenStorageService } from 'src/app/services/tokenstorage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\n\r\nexport class LoginPage implements OnInit {\r\n  \r\n  email: string = 'User@gmail.com'\r\n  password: string = 'User123'\r\n  showPassword=false\r\n  loading = false;\r\n  passwordType: string = 'password';\r\n  passwordIcon: string = 'eye-off';\r\n\r\n  constructor(private router: Router, \r\n              private authService: AuthService, \r\n              private tokenStorage: TokenStorageService, \r\n              private alertService: AlertService, \r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    if(this.tokenStorage.getToken()) {\r\n      this.router.navigate(['/dashboard'])\r\n    }\r\n  }\r\n\r\n  hideShowPassword() {\r\n    this.passwordType=this.passwordType=='text'?'password':'text';\r\n    this.passwordIcon=this.passwordIcon=='eye-off'?'eye':'eye-off';\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    this.authService.login(this.email, this.password).subscribe(\r\n      data=>{\r\n        this.alertService.presentToast(data.msg, 'success');\r\n        this.tokenStorage.setToken(data.token);\r\n        setTimeout(()=>{\r\n          this.router.navigateByUrl('/dashboard', {replaceUrl: true});\r\n        }, 1500)\r\n      }\r\n    )\r\n    this.loading=false;\r\n  }\r\n}\r\n","export default \"<ion-content>\\r\\n  <div class=\\\"content\\\">\\r\\n    <ion-card>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title class=\\\"xs-header1\\\">Sign In</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      \\r\\n      <ion-grid>\\r\\n        <ion-row class=\\\"ion-justify-content-around\\\">\\r\\n          <ion-col size-xs=\\\"9\\\" size-sm=\\\"5\\\" size-lg=\\\"5\\\">\\r\\n            <ion-card>\\r\\n              <ion-img src=\\\"../../../../assets/images/male-user.png\\\" class=\\\"image\\\"></ion-img>\\r\\n            </ion-card>\\r\\n          </ion-col>\\r\\n\\r\\n          <div *ngIf=\\\"loading\\\" class=\\\"spinner\\\">\\r\\n            <img src=\\\"../../../../assets/icon/spinner.gif\\\">\\r\\n          </div>\\r\\n\\r\\n          <ion-col size-xs=\\\"12\\\" size-sm=\\\"5\\\" size=\\\"5.5\\\">\\r\\n            <ion-card-header>\\r\\n              <ion-card-title class=\\\"xs-header2\\\">Sign In</ion-card-title>\\r\\n            </ion-card-header>\\r\\n            \\r\\n            <ion-card-content>\\r\\n              <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n                  <ion-input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\r\\n                  <ion-icon class=\\\"icon\\\" name=\\\"mail\\\" slot=\\\"end\\\"></ion-icon>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n                  <ion-input [type]=\\\"passwordType\\\" clearOnEdit=\\\"false\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\r\\n                  </ion-input>\\r\\n                  <ion-icon class=\\\"icon\\\" [name]=\\\"passwordIcon\\\" slot=\\\"end\\\" (click)=\\\"hideShowPassword()\\\"></ion-icon>\\r\\n                </ion-item>\\r\\n                \\r\\n                <div class=\\\"handler\\\">\\r\\n                  <a class=\\\"forget-password\\\" routerLink=\\\"#\\\">Forget Password</a>\\r\\n                  <ion-button class=\\\"button\\\" type=\\\"submit\\\" slot=\\\"end\\\">Sign In</ion-button>\\r\\n                  <a class=\\\"register-page\\\" routerLink=\\\"/register\\\">Create a new account</a>\\r\\n                </div>\\r\\n              </form>\\r\\n            </ion-card-content>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}