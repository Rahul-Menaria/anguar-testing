{"version":3,"file":"src_app_pages_users_service_service_module_ts.js","mappings":"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","sources":["./src/app/pages/users/service/service-routing.module.ts","./src/app/pages/users/service/service.module.ts","./src/app/pages/users/service/service.page.ts","./src/app/pages/users/service/service.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ServicePage } from './service.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ServicePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ServicePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ServicePageRoutingModule } from './service-routing.module';\r\n\r\nimport { ServicePage } from './service.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ServicePageRoutingModule\r\n  ],\r\n  declarations: [ServicePage]\r\n})\r\nexport class ServicePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { TokenStorageService } from 'src/app/services/tokenstorage.service'\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  templateUrl: './service.page.html',\r\n  styleUrls: ['./service.page.scss'],\r\n})\r\nexport class ServicePage implements OnInit {\r\n\r\n  user_id: Number;\r\n  business_id: Number;\r\n  services: any;\r\n  messages: any;\r\n  service: string;\r\n  message: string;\r\n  businessName: string;\r\n  contactNo: Number;\r\n\r\n  constructor(private tokenStorage: TokenStorageService,\r\n              private userService: UserService,\r\n              private alertServie: AlertService\r\n             ) { }\r\n\r\n  ngOnInit() {\r\n    this.getUser();\r\n    this.getService();\r\n    this.getMessage();\r\n    this.getBusinessDetails();\r\n  }\r\n\r\n  getUser() {\r\n    let user = this.tokenStorage.DecodeToken();\r\n    this.user_id = user['user_id'];\r\n    this.business_id = user['business_id']\r\n  }\r\n\r\n  show(content) {\r\n    document.getElementById(content).style.display = 'block';\r\n  }\r\n\r\n  getBusinessDetails() {\r\n    this.userService.getBusinessDetails(this.user_id).subscribe(\r\n      data=> {\r\n        this.businessName = data['businessName'];\r\n        this.contactNo = data['contactNo'];\r\n      }\r\n    )\r\n  }\r\n\r\n  addBusinessDetails() {\r\n    this.userService.addBusinessDetails(this.user_id, this.businessName, this.contactNo).subscribe(\r\n      data => {\r\n        this.alertServie.presentToast(data['msg'], 'success');\r\n      }\r\n    )\r\n  }\r\n\r\n  async getService() {\r\n    await this.userService.getService(this.user_id).subscribe(\r\n      data => {\r\n        this.services = data['service'];\r\n      }\r\n    )\r\n  }\r\n\r\n  addService() {\r\n    this.userService.addService(this.user_id, this.business_id, this.service).subscribe(\r\n      async data=> {\r\n        this.alertServie.presentToast(data['msg'], 'success')\r\n        this.service = '';\r\n        document.getElementById('service').style.display = 'none';\r\n        await this.getService()\r\n      }\r\n    )\r\n  }\r\n  \r\n  deleteService(data) {\r\n    this.userService.deleteService(data).subscribe(\r\n      async data => {\r\n        this.alertServie.presentToast(data['msg'], 'success')\r\n        await this.getService();\r\n      }\r\n    )\r\n  }\r\n\r\n  async getMessage() {\r\n    await this.userService.getMessage(this.user_id).subscribe(\r\n      data => {\r\n        this.messages = data['message'];\r\n      }\r\n    )\r\n  }\r\n\r\n  addMessage() {\r\n    this.userService.addMessage(this.user_id, this.business_id, this.message).subscribe(\r\n      async data => {\r\n        this.alertServie.presentToast(data['msg'], 'success')\r\n        this.message = '';\r\n        document.getElementById('message').style.display = 'none';\r\n        await this.getMessage()\r\n      }\r\n    )\r\n  }\r\n\r\n  async deleteMessage(data) {\r\n    await this.userService.deleteMessage(data).subscribe(\r\n      data => {\r\n        this.alertServie.presentToast(data['msg'], 'success')\r\n        this.getMessage();\r\n      }\r\n    )\r\n  }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Service</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      Business Details\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Business Name</ion-label>\\r\\n        <ion-input name=\\\"businessName\\\" type=\\\"text\\\" [(ngModel)]=\\\"businessName\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Contact Info</ion-label>\\r\\n        <ion-input name=\\\"contactNo\\\" type=\\\"number\\\" [(ngModel)]=\\\"contactNo\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-button (click)=\\\"addBusinessDetails()\\\">Add</ion-button>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-item>\\r\\n        <ion-label>\\r\\n          Customer Service\\r\\n        </ion-label>\\r\\n        <ion-icon name=\\\"add-circle-outline\\\" (click)=\\\"show('service')\\\" slot=\\\"end\\\" color=\\\"primary\\\"></ion-icon>\\r\\n      </ion-item>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-list>\\r\\n        <ion-item *ngFor=\\\"let service of services\\\">\\r\\n          <ion-label>{{service.service_data}}</ion-label>\\r\\n          <ion-icon (click)=\\\"deleteService(service.service_id)\\\" name=\\\"trash\\\" slot=\\\"end\\\" color=\\\"danger\\\"></ion-icon>\\r\\n        </ion-item>\\r\\n        <ion-item id=\\\"service\\\">\\r\\n          <ion-label position=\\\"floating\\\">Add Service</ion-label>\\r\\n          <ion-input name=\\\"service\\\" [(ngModel)]=\\\"service\\\"></ion-input>\\r\\n          <ion-button slot=\\\"end\\\" (click)=\\\"addService()\\\">Add</ion-button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-item>\\r\\n        <ion-label>\\r\\n          Custom Messages\\r\\n        </ion-label>\\r\\n        <ion-icon name=\\\"add-circle-outline\\\" (click)=\\\"show('message')\\\" slot=\\\"end\\\" color=\\\"primary\\\"></ion-icon>\\r\\n      </ion-item>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-list>\\r\\n        <ion-item *ngFor=\\\"let message of messages\\\">\\r\\n          <ion-label>{{message.text_data}}</ion-label>\\r\\n          <ion-icon (click)=\\\"deleteMessage(message.text_id)\\\" name=\\\"trash\\\" slot=\\\"end\\\" color=\\\"danger\\\"></ion-icon>\\r\\n        </ion-item>\\r\\n        <ion-item id=\\\"message\\\">\\r\\n          <ion-label position=\\\"floating\\\">Add Message</ion-label>\\r\\n          <ion-input name=\\\"message\\\" [(ngModel)]=\\\"message\\\"></ion-input>\\r\\n          <ion-button slot=\\\"end\\\" (click)=\\\"addMessage()\\\">Add</ion-button>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}